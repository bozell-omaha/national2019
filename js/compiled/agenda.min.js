'use strict';

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function fixedAgenda() {
    var agenda = document.querySelector('#agenda');
    var header = document.querySelector('#header');

    window.onscroll = function () {
        var agendaScroll = agenda.getBoundingClientRect().top;
        var agendaBottom = agenda.getBoundingClientRect().bottom;

        if (window.innerWidth < 750) {
            var headerBottom = header.getBoundingClientRect().bottom;
            if (agendaScroll <= 80) {
                agenda.classList.add('fixed');
                header.classList.add('slide-up');
                fixDays();
            } else if (agendaScroll >= 80) {
                agenda.classList.remove('fixed');
                header.classList.remove('slide-up');
            }
        }

        if (agendaScroll <= -1) {
            agenda.classList.add('fixed');
            fixDays();
        } else if (agenda.classList.contains('fixed') && agendaScroll >= 1) {
            var agendaEvents = agenda.querySelector('.agenda__day-wrapper.active');
            agenda.classList.remove('fixed');
            agendaEvents.classList.remove('active');
        }
    };
}

function fixDays() {
    var dayWrappers = document.querySelectorAll('.agenda__day-wrapper');
    var agendaDays = document.querySelectorAll('.agenda-day');
    var agenda = document.querySelector('#agenda');
    var sweetSpot = document.querySelector('.agenda__header').getBoundingClientRect().height + document.querySelector('.agenda__events-header').getBoundingClientRect().height;

    dayWrappers.forEach(function (wrapper, i) {
        var top = wrapper.getBoundingClientRect().top;
        var bottom = wrapper.getBoundingClientRect().bottom;
        var wrapperDay = wrapper.getAttribute('data-day');

        if (top <= sweetSpot && bottom >= sweetSpot) {
            wrapper.classList.remove('bottom');
            wrapper.classList.add('active');
            agendaDays.forEach(function (day) {
                var theDay = day.getAttribute('data-day');
                if (wrapperDay == theDay) {
                    day.classList.add('active');
                }
            });
        } else if (wrapper.classList.contains('active')) {
            wrapper.classList.remove('active');
            wrapper.classList.add('bottom');
            agendaDays.forEach(function (day) {
                var theDay = day.getAttribute('data-day');
                if (wrapperDay == theDay) {
                    day.classList.remove('active');
                }
            });
        }
    });
}

function scrollAgenda() {
    var agendaDays = document.querySelectorAll('.agenda-day');
    var agenda = document.querySelector('#agenda');
    var dayWrappers = document.querySelectorAll('.agenda__day-wrapper');

    agendaDays.forEach(function (day, i) {
        day.addEventListener('click', function () {
            var scrollAgenda = function () {
                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(theDay) {
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                        while (1) {
                            switch (_context.prev = _context.next) {
                                case 0:
                                    if (!agenda.classList.contains('fixed')) {
                                        window.scroll({
                                            behavior: 'smooth',
                                            top: agenda.offsetTop
                                        });
                                    }

                                case 1:
                                case 'end':
                                    return _context.stop();
                            }
                        }
                    }, _callee, this);
                }));

                return function scrollAgenda(_x) {
                    return _ref.apply(this, arguments);
                };
            }();

            var theDay = day.getAttribute('data-day');


            scrollAgenda(theDay).then(function () {
                dayWrappers.forEach(function (wrapper) {
                    var wrapperDay = wrapper.getAttribute('data-day');
                    if (wrapperDay == theDay) {
                        if (window.innerWidth < 750) {
                            var mobileSweetSpot = document.querySelector('.agenda__events-header').getBoundingClientRect().height;

                            window.scroll({
                                behavior: 'smooth',
                                top: wrapper.offsetTop + mobileSweetSpot
                            });
                        } else {
                            var sweetSpot = document.querySelector('.agenda__header').getBoundingClientRect().height;
                            window.scroll({
                                behavior: 'smooth',
                                top: wrapper.offsetTop - sweetSpot
                            });
                        }
                    }
                });
            });
        });
    });
}

function showFilters() {
    var agendaHeader = document.querySelector('.agenda__header-search');
    var filterIcons = agendaHeader.querySelectorAll('.show-filters');
    var filterContainer = agendaHeader.querySelector('.agenda-filters');

    filterIcons.forEach(function (filter) {
        filter.addEventListener('click', function () {
            if (window.innerWidth < 750) {
                filterContainer.classList.toggle('slide');
            } else {
                filterContainer.classList.toggle('show');
            }
        });
    });
}

function filters() {
    var days = document.querySelectorAll('.agenda__day-wrapper');
    var inputs = document.querySelectorAll('.agenda-filter input');
    var isoArray = [];
    days.forEach(function (day) {
        var eventsWrapper = day.querySelector('.agenda__events');
        var iso = new Isotope(day, {
            itemSelector: '.event',
            layoutMode: 'vertical',
            stagger: 30
        });
        isoArray.push(iso);
    });

    inputs.forEach(function (input) {
        input.addEventListener('change', function () {
            var filters = [];
            var theFilters;
            inputs.forEach(function (checkbox) {
                if (checkbox.checked) {
                    filters.push(checkbox.value);
                }
                theFilters = filters.join(', ');
            });
            isoArray.forEach(function (iso) {
                console.log(iso);
                iso.arrange({ filter: theFilters });
                // if (iso.filteredItems.length == 0) {
                //     iso.element.parentElement.style.display = 'none';
                // } else {
                //     iso.element.parentElement.style.display = 'block';
                // }
            });
        });
    });
}

fixedAgenda();
scrollAgenda();
showFilters();
filters();
