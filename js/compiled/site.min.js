"use strict";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

console.log('Hi');
/*
=====================================
Helper Functions
=====================================
*/

function hasClass(el, cls) {
  return el.className && new RegExp('(\\s|^)' + cls + '(\\s|$)').test(el.className);
}

function indexInParent(node) {
  var children = node.parentNode.childNodes;
  var num = 0;

  for (var i = 0; i < children.length; i++) {
    if (children[i] == node) return num;
    if (children[i].nodeType == 1) num++;
  }

  return -1;
}

var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g);
/*
=====================================
Home Page Functions
=====================================
*/

var homeSpeakerInit = function homeSpeakerInit() {
  var slides = document.querySelectorAll('.slide');
  var slider = document.querySelector('.slider');
  var prevSlide = document.querySelector('.slide__nav-btn--prev');

  if (window.innerWidth < 990) {
    var _slider = document.querySelector('.slider');

    var width = window.innerWidth;
    var slide = document.querySelector('.slide.active');
    var contentHeight = slide.querySelector('.slide__content').offsetHeight;
    var theHeight = contentHeight + width + 200;
    _slider.style.height = theHeight + 'px';
  } //Hide all slide that aren't active


  slides.forEach(function (slide) {
    if (!hasClass(slide, 'active')) {
      TweenLite.set(slide, {
        autoAlpha: 0
      });
    }
  }); // Disable arrow on page load

  TweenLite.set(prevSlide, {
    autoAlpha: 0.2
  });
};

var speakerSlider = function speakerSlider() {
  var nextSlide = document.querySelector('.slide__nav-btn--next');
  var prevSlide = document.querySelector('.slide__nav-btn--prev');

  var goToNextSlide = function goToNextSlide(slideOut, slideIn) {
    var tl = new TimelineMax(); //slideOut items

    var slideOutImg = slideOut.querySelector('.slide__img--inner');
    var slideOutContent = slideOut.querySelector('.slide__content'); //slideIn items

    var slideInPos = Array.from(slideIn.parentNode.children).indexOf(slideIn) + 1;
    var slideInImg = slideIn.querySelector('.slide__img--inner');
    var slideInContent = slideIn.querySelector('.slide__content');

    var size = _toConsumableArray(document.querySelectorAll('.slide')).length;

    tl.to(slideIn, 0.4, {
      autoAlpha: 1,
      className: '+=active'
    }).to(slideOut, 0.4, {
      className: '-=active'
    }).to(slideOutImg, 1.1, {
      xPercent: 100,
      ease: Expo.easeInOut
    }, 0.1).fromTo(slideInImg, 1.1, {
      xPercent: -115,
      scale: 1.3
    }, {
      xPercent: 0,
      scale: 1,
      ease: Expo.easeInOut
    }, 0.1).to(slideOutContent, 0.9, {
      y: 32,
      autoAlpha: 0,
      ease: Expo.easeInOut
    }, 0.1).fromTo(slideInContent, 0.9, {
      y: 32,
      autoAlpha: 0
    }, {
      y: 0,
      autoAlpha: 1,
      ease: Expo.easeInOut
    }, 0.1); // Fade out arrow up and fade in arrow down
    // Fade in arrow down

    TweenLite.set(prevSlide, {
      autoAlpha: 1
    }); // Fade out arrow up on last slide

    if (slideInPos === size) {
      TweenLite.to(nextSlide, 0.3, {
        autoAlpha: 0.2,
        ease: Linear.easeNone
      });
    }
  };

  var goToPrevSlide = function goToPrevSlide(slideOut, slideIn) {
    var tl = new TimelineMax(); //slideOut items

    var slideOutImg = slideOut.querySelector('.slide__img--inner');
    var slideOutContent = slideOut.querySelector('.slide__content'); //slideIn items

    var slideInPos = Array.from(slideIn.parentNode.children).indexOf(slideIn) + 1;
    var slideInImg = slideIn.querySelector('.slide__img--inner');
    var slideInContent = slideIn.querySelector('.slide__content');
    tl.to(slideIn, 0.4, {
      autoAlpha: 1,
      className: '+=active'
    }).to(slideOut, 0.4, {
      className: '-=active'
    }).to(slideOutImg, 1.1, {
      xPercent: -100,
      ease: Expo.easeInOut
    }, 0.1).fromTo(slideInImg, 1.1, {
      xPercent: 115,
      scale: 1.3
    }, {
      xPercent: 0,
      scale: 1,
      ease: Expo.easeInOut
    }, 0.1).to(slideOutContent, 0.9, {
      y: 32,
      autoAlpha: 0,
      ease: Expo.easeInOut
    }, 0.1).fromTo(slideInContent, 0.9, {
      y: 32,
      autoAlpha: 0
    }, {
      y: 0,
      autoAlpha: 1,
      ease: Expo.easeInOut
    }, 0.1); // Fade out arrow up and fade in arrow down
    // Fade in arrow down

    TweenLite.set(nextSlide, {
      autoAlpha: 1
    }); // Fade out arrow up on last slide

    if (slideInPos === 1) {
      TweenLite.to(prevSlide, 0.3, {
        autoAlpha: 0.2,
        ease: Linear.easeNone
      });
    }
  };

  nextSlide.addEventListener('click', function (e) {
    var slideOut = document.querySelector('.slide.active');
    var slideIn = document.querySelector('.slide.active').nextElementSibling;

    if (slideIn !== null) {
      goToNextSlide(slideOut, slideIn);
    }
  });
  prevSlide.addEventListener('click', function (e) {
    var slideOut = document.querySelector('.slide.active');
    var slideIn = document.querySelector('.slide.active').previousElementSibling;

    if (slideIn !== null) {
      goToPrevSlide(slideOut, slideIn);
    }
  });
}; // const heroVideo = () => {
//     const modalBtn = document.querySelector('.js-tingle-modal');
//     modalBtn.addEventListener('click', function() {
//         var modalSurprise = new tingle.modal({
//             onClose: function() {
//                 modalSurprise.destroy();
//             },
//         });
//         modalSurprise.setContent(
//             '<iframe width="100%" height="400" src="https://www.youtube.com/embed/Vyi8x02GRuI" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>'
//         );
//         modalSurprise.open();
//     });
// };


var initHeroSlides = function initHeroSlides() {
  var carouselCells = document.querySelectorAll('.carousel-cell'); //Hide all slide that aren't active

  carouselCells.forEach(function (cell) {
    if (!hasClass(cell, 'active')) {
      TweenLite.set(cell, {
        autoAlpha: 0
      });
    }
  });
};

var homeCellSlider = function homeCellSlider() {
  var nextCell = document.querySelector('.carousel-btn--next');
  var prevCell = document.querySelector('.carousel-btn--prev');

  var goToNextCell = function goToNextCell(cellOut, cellIn) {
    var tl = new TimelineMax(); //cellOut items

    var cellOutHeading = cellOut.querySelector('h1');
    var cellOutContent = cellOut.querySelector('p'); //slideIn items

    var cellInPos = Array.from(cellIn.parentNode.children).indexOf(cellIn) + 1;
    var cellInHeading = cellIn.querySelector('h1');
    var cellInContent = cellIn.querySelector('p');

    var size = _toConsumableArray(document.querySelectorAll('.carousel-cell')).length;

    tl.to(cellIn, 0.4, {
      autoAlpha: 1,
      className: '+=active'
    }).to(cellOut, 0.4, {
      className: '-=active'
    }).to(cellOutHeading, 0.9, {
      yPercent: -32,
      autoAlpha: 0,
      ease: Quart.easeIn
    }, 0.1).to(cellOutContent, 0.9, {
      yPercent: -32,
      autoAlpha: 0,
      ease: Quart.easeIn
    }, 0.2).fromTo(cellInHeading, 0.9, {
      yPercent: 32,
      autoAlpha: 0
    }, {
      yPercent: 0,
      autoAlpha: 1,
      ease: Expo.easeOut
    }, 1.2).fromTo(cellInContent, 0.9, {
      yPercent: 32,
      autoAlpha: 0
    }, {
      yPercent: 0,
      autoAlpha: 1,
      ease: Expo.easeOut
    }, 1.3); // Fade out arrow up and fade in arrow down
    // Fade in arrow down

    TweenLite.set(prevCell, {
      autoAlpha: 1
    }); // Fade out arrow up on last slide

    if (cellInPos === size) {
      TweenLite.to(nextCell, 0.3, {
        autoAlpha: 0.2,
        ease: Linear.easeNone
      });
    }
  };

  var goToPrevCell = function goToPrevCell(cellOut, cellIn) {
    var tl = new TimelineMax(); //cellOut items

    var cellOutHeading = cellOut.querySelector('h1');
    var cellOutContent = cellOut.querySelector('p'); //slideIn items

    var cellInPos = Array.from(cellIn.parentNode.children).indexOf(cellIn) + 1;
    var cellInHeading = cellIn.querySelector('h1');
    var cellInContent = cellIn.querySelector('p');

    var size = _toConsumableArray(document.querySelectorAll('.carousel-cell')).length;

    tl.to(cellIn, 0.4, {
      autoAlpha: 1,
      className: '+=active'
    }).to(cellOut, 0.4, {
      className: '-=active'
    }).to(cellOutContent, 0.9, {
      yPercent: 32,
      autoAlpha: 0,
      ease: Quart.easeIn
    }, 0.1).to(cellOutHeading, 0.9, {
      yPercent: 32,
      autoAlpha: 0,
      ease: Quart.easeIn
    }, 0.2).fromTo(cellInContent, 0.9, {
      yPercent: -32,
      autoAlpha: 0
    }, {
      yPercent: 0,
      autoAlpha: 1,
      ease: Expo.easeOut
    }, 1.2).fromTo(cellInHeading, 0.9, {
      yPercent: -32,
      autoAlpha: 0
    }, {
      yPercent: 0,
      autoAlpha: 1,
      ease: Expo.easeOut
    }, 1.3); // Fade out arrow up and fade in arrow down
    // Fade in arrow down

    TweenLite.set(nextCell, {
      autoAlpha: 1
    }); // Fade out arrow up on last slide

    if (cellInPos === 1) {
      TweenLite.to(prevCell, 0.3, {
        autoAlpha: 0.2,
        ease: Linear.easeNone
      });
    }
  };

  nextCell.addEventListener('click', function (e) {
    var cellOut = document.querySelector('.carousel-cell.active');
    var cellIn = document.querySelector('.carousel-cell.active').nextElementSibling;

    if (cellIn !== null) {
      goToNextCell(cellOut, cellIn);
    }
  });
  prevCell.addEventListener('click', function (e) {
    var cellOut = document.querySelector('.carousel-cell.active');
    var cellIn = document.querySelector('.carousel-cell.active').previousElementSibling;

    if (cellIn !== null) {
      goToPrevCell(cellOut, cellIn);
    }
  });
};

var smallHeightHacks = function smallHeightHacks() {
  var tdaLogo = document.querySelector('.header__td-logo');
  var links = document.querySelectorAll('.nav-link--large'); // const heroImg = document.querySelector('.home-hero__img');

  if (window.innerHeight < 850 && window.innerWidth > 750) {
    tdaLogo.style.display = 'none';
    links.forEach(function (link) {
      link.style.margin = '6px 0';
    }); // heroImg.style.right = '-30%';
  } else if (window.innerHeight > 675 && window.innerWidth > 750) {
    tdaLogo.style.display = 'flex';
    links.forEach(function (link) {
      link.style.margin = '12px 0';
    }); // heroImg.style.right = '-64px';
  }
};
/*
=====================================
BCL Functions
=====================================
*/


var BCLTopics = function BCLTopics() {
  var topicContainer = document.querySelector('.ones-topics');
  var topicSlides = topicContainer.querySelectorAll('.ones-topics__content');
  var topicLinks = topicContainer.querySelectorAll('.ones-topics__topic');

  var initTopics = function initTopics() {
    //Hide all slide that aren't active
    topicSlides.forEach(function (slide) {
      if (!hasClass(slide, 'active')) {
        TweenLite.set(slide, {
          autoAlpha: 0
        });
      }
    });
  };

  var goToTopic = function goToTopic(slideOut, slideIn) {
    var tl = new TimelineMax();
    tl.set(slideIn, {
      className: '+=active'
    }).set(slideOut, {
      className: '-=active'
    }).to(slideOut, 0.9, {
      y: 32,
      autoAlpha: 0,
      ease: Expo.easeInOut
    }, 0.1).fromTo(slideIn, 0.9, {
      y: 32,
      autoAlpha: 0
    }, {
      y: 0,
      autoAlpha: 1,
      ease: Expo.easeInOut
    }, 0.1);
  };

  topicLinks.forEach(function (link) {
    link.addEventListener('click', function (e) {
      e.preventDefault();
      var slideOut = topicContainer.querySelector('.ones-topics__content.active');
      var slideIn;
      var dataIndex = this.getAttribute('data-index');
      var activeLink = topicContainer.querySelector('.ones-topics__topic.active');

      if (this.classList.contains('active')) {
        return;
      }

      activeLink.classList.remove('active');
      this.classList.add('active');
      topicSlides.forEach(function (slide) {
        if (slide.getAttribute('data-index') === dataIndex) {
          slideIn = slide;
        }

        return;
      });
      goToTopic(slideOut, slideIn);
    });
  });
  initTopics();
};
/*
=====================================
Agenda Functions
=====================================
*/


var fixedAgenda = function fixedAgenda() {
  var agenda = document.querySelector('#agenda');
  var header = document.querySelector('#header');
  var agendaHeight = agenda.getBoundingClientRect().height;
  var daysHeight = agenda.querySelector('.agenda__days').getBoundingClientRect().height;
  var theHeight = (agendaHeight - daysHeight) * -1;
  var slideMenu = document.querySelector('.slide-menu');
  var arrow = document.querySelector('.arrow-forward');

  window.onscroll = function () {
    var scroll = window.pageYOffset;

    if (scroll >= 10 && !header.classList.contains('slim')) {
      if (slideMenu.classList.contains('open')) {
        slideMenu.classList.remove('open');
        TweenMax.to(slideMenu, 0.4, {
          xPercent: -100,
          autoAlpha: 0
        });
        TweenMax.to(arrow, 0.4, {
          rotation: 360
        });
      }

      header.classList.add('slim');
    }

    if (window.location.href.indexOf('agenda') > -1) {
      // alert('your url contains the name franky');
      var agendaScroll = agenda.getBoundingClientRect().top;
      var agendaBottom = agenda.getBoundingClientRect().bottom;

      if (window.innerWidth < 750) {
        var headerBottom = header.getBoundingClientRect().bottom;

        if (agendaScroll <= 80) {
          agenda.classList.add('fixed');
          header.classList.add('slide-up');
          fixDays();
        } else if (agendaScroll >= 80) {
          agenda.classList.remove('fixed');
          header.classList.remove('slide-up');
        }
      }

      if (agendaScroll <= -1) {
        agenda.classList.add('fixed');
        agenda.classList.remove('bottom');
        fixDays();
      } else {
        agenda.classList.remove('fixed');
        removeActive();
      }

      if (agendaScroll <= theHeight) {
        agenda.classList.add('bottom');
        agenda.classList.remove('fixed');
        removeActive();
      }
    }
  };
};

var removeActive = function removeActive() {
  var agenda = document.querySelector('#agenda');
  var actives = agenda.querySelectorAll('.active');

  if (actives.length > 0) {
    actives.forEach(function (item) {
      item.classList.remove('active');
    });
  }
};

var fixDays = function fixDays() {
  var dayWrappers = document.querySelectorAll('.agenda__day-wrapper');
  var agendaDays = document.querySelectorAll('.agenda-day');
  var agenda = document.querySelector('#agenda');
  var sweetSpot = document.querySelector('.agenda__header').getBoundingClientRect().height + document.querySelector('.agenda__events-header').getBoundingClientRect().height;
  dayWrappers.forEach(function (wrapper, i) {
    var top = wrapper.getBoundingClientRect().top;
    var bottom = wrapper.getBoundingClientRect().bottom;
    var wrapperDay = wrapper.getAttribute('data-day');

    if (top <= sweetSpot && bottom >= sweetSpot) {
      wrapper.classList.remove('bottom');
      wrapper.classList.add('active');
      agendaDays.forEach(function (day) {
        var theDay = day.getAttribute('data-day');

        if (wrapperDay == theDay) {
          day.classList.add('active');
        }
      });
    } else if (wrapper.classList.contains('active')) {
      wrapper.classList.remove('active');
      wrapper.classList.add('bottom');
      agendaDays.forEach(function (day) {
        var theDay = day.getAttribute('data-day');

        if (wrapperDay == theDay) {
          day.classList.remove('active');
        }
      });
    }
  });
};

var scrollAgenda = function scrollAgenda() {
  var agendaDays = document.querySelectorAll('.agenda-day');
  var agenda = document.querySelector('#agenda');
  var dayWrappers = document.querySelectorAll('.agenda__day-wrapper');
  agendaDays.forEach(function (day, i) {
    day.addEventListener('click', function () {
      var theDay = day.getAttribute('data-day');

      function scrollAgenda(_x) {
        return _scrollAgenda.apply(this, arguments);
      }

      function _scrollAgenda() {
        _scrollAgenda = _asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee(theDay) {
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  if (!agenda.classList.contains('fixed')) {
                    window.scroll({
                      behavior: 'smooth',
                      top: agenda.offsetTop
                    });
                  }

                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));
        return _scrollAgenda.apply(this, arguments);
      }

      scrollAgenda(theDay).then(function () {
        dayWrappers.forEach(function (wrapper) {
          var wrapperDay = wrapper.getAttribute('data-day');

          if (wrapperDay == theDay) {
            if (window.innerWidth < 750) {
              var mobileSweetSpot = document.querySelector('.agenda__events-header').getBoundingClientRect().height;
              window.scroll({
                behavior: 'smooth',
                top: wrapper.offsetTop + mobileSweetSpot
              });
            } else {
              var sweetSpot = document.querySelector('.agenda__header').getBoundingClientRect().height;
              window.scroll({
                behavior: 'smooth',
                top: wrapper.offsetTop - sweetSpot
              });
            }
          }
        });
      });
    });
  });
};

var showFilters = function showFilters() {
  var agendaHeader = document.querySelector('.agenda__header-search');
  var filterIcons = agendaHeader.querySelectorAll('.show-filters');
  var filterContainer = agendaHeader.querySelector('.agenda-filters');
  filterIcons.forEach(function (filter) {
    filter.addEventListener('click', function () {
      if (window.innerWidth < 750) {
        filterContainer.classList.toggle('slide');
      } else {
        filterContainer.classList.toggle('show');
      }
    });
  });
};

var filters = function filters() {
  var days = document.querySelectorAll('.agenda__day-wrapper');
  var inputs = document.querySelectorAll('.agenda-filter input');
  var isoArray = [];
  days.forEach(function (day) {
    var eventsWrapper = day.querySelector('.agenda__events');
    var iso = new Isotope(day, {
      itemSelector: '.event',
      layoutMode: 'vertical',
      stagger: 30
    });
    isoArray.push(iso);
  });
  inputs.forEach(function (input) {
    input.addEventListener('change', function () {
      var filters = [];
      var theFilters;
      inputs.forEach(function (checkbox) {
        if (checkbox.checked) {
          filters.push(checkbox.value);
        }

        theFilters = filters.join(', ');
      });
      isoArray.forEach(function (iso) {
        iso.arrange({
          filter: theFilters
        });
      });
    });
  });
};
/*
=====================================
Speaker Functions
=====================================
*/


var speakersInit = function speakersInit() {
  var body = document.body;
  var docEl = document.documentElement;
  var grid = document.querySelector('.speaker-grid');

  var speakers = _toConsumableArray(grid.querySelectorAll('.speaker'));

  var contents = _toConsumableArray(document.querySelectorAll('.content > .content-item'));

  var closeTheSpeaker = document.querySelector('.content__close');
  var contentWrapper = document.querySelector('#barba-wrapper');
  var contentPattern = document.querySelector('.content > .content__pattern');
  var scrollPos;
  var activeSpeaker; //Window Size

  var winsize;

  var calcWinsize = function calcWinsize() {
    return winsize = {
      width: window.innerWidth,
      height: window.innerHeight
    };
  };

  calcWinsize(); // Calculates the offsetTop or offsetLeft of an element relative to the viewport
  // (not counting with any transforms the element might have)

  var getOffset = function getOffset(elem, axis) {
    var offset = 0;
    var type = axis === 'top' ? 'offsetTop' : 'offsetLeft';

    do {
      if (!isNaN(elem[type])) {
        offset += elem[type];
      }
    } while (elem = elem.offsetParent);

    return offset;
  }; //Disable/Enable Scroll Things
  // Scroll control functions. Taken from https://stackoverflow.com/a/4770179.


  var keys = {
    37: 1,
    38: 1,
    39: 1,
    40: 1
  };

  var preventDefault = function preventDefault(e) {
    e = e || window.event;
    if (e.preventDefault) e.preventDefault();
    e.returnValue = false;
  };

  var preventDefaultForScrollKeys = function preventDefaultForScrollKeys(e) {
    if (keys[e.keyCode]) {
      preventDefault(e);
      return false;
    }
  };

  var disableScroll = function disableScroll() {
    if (window.addEventListener) // older FF
      window.addEventListener('DOMMouseScroll', preventDefault, false);
    window.onwheel = preventDefault; // modern standard

    window.onmousewheel = document.onmousewheel = preventDefault; // older browsers, IE

    window.ontouchmove = preventDefault; // mobile

    document.onkeydown = preventDefaultForScrollKeys;
  };

  var enableScroll = function enableScroll() {
    if (window.removeEventListener) window.removeEventListener('DOMMouseScroll', preventDefault, false);
    window.onmousewheel = document.onmousewheel = null;
    window.onwheel = null;
    window.ontouchmove = null;
    document.onkeydown = null;
  }; //Hide All other speakers


  var hideOthers = function hideOthers() {
    var allSpeakers = document.querySelectorAll('.speaker:not(.exclude)');
    TweenMax.staggerTo(allSpeakers, 0.8, {
      scale: 0,
      opacity: 0,
      ease: Expo.easeInOut
    });
  };

  var showOthers = function showOthers() {
    var allSpeakers = document.querySelectorAll('.speaker:not(.exclude)');
    TweenMax.staggerTo(allSpeakers, 0.8, {
      scale: 1,
      opacity: 1,
      ease: Expo.easeInOut,
      onComplete: function onComplete() {
        allSpeakers.forEach(function (speaker) {
          speaker.style.transform = 'none';
        });
      }
    });
  };

  var hideTexts = function hideTexts(name, keynote) {
    TweenMax.to([name, keynote], 0.5, {
      ease: Quart.easeIn,
      delay: 0,
      y: 20,
      opacity: 0
    });
  };

  var showTexts = function showTexts(name, keynote) {
    TweenMax.to([name, keynote], 1, {
      ease: Expo.easeOut,
      delay: 1,
      y: 0,
      opacity: 1
    });
  };

  var showContentElems = function showContentElems(contentEl, delay) {
    // toggle the back control and scroll indicator.
    var title = contentEl.querySelector('.content-item__title');
    var text = contentEl.querySelector('.content-item__text');
    var close = document.querySelector('.content > .content__close');
    var position = contentEl.querySelector('.content-item__position');

    if (!title.classList.contains('charmed')) {
      charming(title);
      title.classList.add('charmed');
    } // And access the spans/letters.


    var titleLetters = title.querySelectorAll('span');
    TweenMax.to([close, text, position, contentPattern], 0.8, {
      ease: Expo.easeOut,
      delay: delay,
      startAt: {
        y: 60
      },
      y: 0,
      opacity: 1
    });
    setTimeout(function () {
      titleLetters.forEach(function (letter, pos) {
        var delay = pos * 0.05;
        TweenMax.to(letter, 0.6, {
          ease: Back.easeOut,
          delay: delay,
          startAt: {
            yPercent: '50%',
            opacity: 0
          },
          yPercent: '0',
          opacity: 1
        });
      });
    }, 1000);
  };

  var hideContentElems = function hideContentElems(contentEl, delay) {
    // toggle the back control and scroll indicator.
    var title = contentEl.querySelector('.content-item__title');
    var text = contentEl.querySelector('.content-item__text');
    var position = contentEl.querySelector('.content-item__position');
    var close = document.querySelector('.content > .content__close'); // charming(title);
    // And access the spans/letters.

    var titleLetters = title.querySelectorAll('span');
    var titleLettersTotal = titleLetters.length;
    TweenMax.to([close, text, contentPattern, position], 0.8, {
      ease: Expo.easeIn,
      delay: 0,
      startAt: null,
      y: 60,
      opacity: 0
    });
    titleLetters.forEach(function (letter, pos) {
      TweenMax.to(letter, 0.3, {
        ease: Quart.easeIn,
        delay: (titleLettersTotal - pos - 1) * 0.04,
        yPercent: '50%',
        startAt: null,
        opacity: 0
      });
    });
  };

  var getSizePosition = function getSizePosition(el) {
    var scrolls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;
    var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;
    return {
      width: el.offsetWidth,
      height: el.offsetHeight,
      left: scrolls ? getOffset(el, 'left') - scrollLeft : getOffset(el, 'left'),
      top: scrolls ? getOffset(el, 'top') - scrollTop : getOffset(el, 'top')
    };
  };

  var openSpeaker = function openSpeaker(speaker) {
    if (speaker.isAnimating) return;
    speaker.isAnimating = true; //grab elements we'll need

    var speakerBG = speaker.querySelector('.speaker__bg');
    var speakerImgWrap = speaker.querySelector('.speaker__wrap');
    var speakerImg = speaker.querySelector('.speaker__img');
    var speakerName = speaker.querySelector('.speaker__name');
    var speakerKeynote = speaker.querySelector('.speaker__keynote');
    var gridWrap = document.querySelector('.speaker-grid');
    speaker.classList.add('exclude'); // Get the current scroll position.

    scrollPos = window.scrollY; // Disable Scroll

    disableScroll(); //set the current value

    var current = speakers.indexOf(speaker);
    activeSpeaker = current; //Hide all the other Speakers

    hideOthers();
    hideTexts(speakerName, speakerKeynote); // Get the "grid__item-bg" width and height and set it explicitly,
    // also set its top and left respective to the page.

    var itemDim = getSizePosition(speaker);
    speakerBG.style.width = "".concat(itemDim.width, "px");
    speakerBG.style.height = "".concat(itemDim.height, "px");
    speakerBG.style.left = "".concat(itemDim.left, "px");
    speakerBG.style.top = "".concat(itemDim.top, "px"); // Set it to position fixed.

    speakerBG.style.position = 'fixed';
    speaker.style.zIndex = '1000'; // Calculate the viewport diagonal. We will need to take this in consideration when scaling up the item´s bg element.

    var d = Math.hypot(winsize.width, winsize.height); // Scale up the item´s bg element.

    TweenMax.to(speakerBG, 1.2, {
      ease: Expo.easeInOut,
      delay: 0.4,
      x: winsize.width / 2 - (itemDim.left + itemDim.width / 2),
      y: winsize.height / 2 - (itemDim.top + itemDim.height / 2),
      scaleX: d / itemDim.width,
      scaleY: d / itemDim.height // rotation: -1 * speaker.angle * 2,

    }); // Get the content element respective to this grid item.

    var contentEl = contents[current]; // Set it to current.

    contentEl.classList.add('content-item--current'); // Calculate the item´s image and content´s image sizes and positions.
    // We need this so we can scale up and translate the item´s image to the same size and position of the content´s image.

    var imgDim = getSizePosition(speakerImgWrap);
    var contentImgDim = getSizePosition(contentEl.querySelector('.content-item__img'), false); // Show the back control and scroll indicator and all the item´s content elements (1 second delay).

    showContentElems(contentEl, 1);
    TweenMax.to(speakerImg, 1.2, {
      ease: Expo.easeInOut,
      delay: 0.55,
      scaleX: contentImgDim.width / imgDim.width,
      scaleY: contentImgDim.height / imgDim.height,
      x: contentImgDim.left + contentImgDim.width / 2 - (imgDim.left + imgDim.width / 2),
      y: contentImgDim.top + contentImgDim.height / 2 - (imgDim.top + imgDim.height / 2),
      rotation: 0,
      onComplete: function onComplete() {
        // Hide the item´s image and show the content´s image. Should both be overlapping.
        speakerImg.style.opacity = 0;
        contentEl.querySelector('.content-item__img').style.visibility = 'visible'; // Set the main content wrapper to absolute so it´s position at the top.

        contentWrapper.style.position = 'initial';
        contentEl.parentNode.style.position = 'absolute'; // Hiding the grid scroll.

        gridWrap.classList.add('grid-wrap--hidden'); // Scroll up the page.

        window.scrollTo(0, 0); // Enable page scrolling.

        enableScroll();
        speaker.isAnimating = false;
      }
    });
  };

  var closeItem = function closeItem(item) {
    if (item.isAnimating) return;
    item.isAnimating = true;
    var gridWrap = document.querySelector('.speaker-grid'); // Get the content element respective to this grid item.

    var contentEl = contents[activeSpeaker];
    var contentImg = contentEl.querySelector('.content-item__img'); // Scroll to the previous scroll position before opening the item.

    window.scrollTo(0, scrollPos);
    contentEl.parentNode.style.position = 'fixed'; // Disable page scrolling.

    disableScroll(); // Showing the grid scroll.

    gridWrap.classList.remove('grid-wrap--hidden'); // The item that is open.

    var gridItem = speakers[activeSpeaker];
    var gridItemImg = gridItem.querySelector('.speaker__img');
    var gridItemBg = gridItem.querySelector('.speaker__bg');
    var gridItemName = gridItem.querySelector('.speaker__name');
    var gridItemKeynote = gridItem.querySelector('.speaker__keynote'); // Hide the back control and scroll indicator and all the item´s content elements.

    hideContentElems(contentEl, 0); // Set the grid´s image back to visible and hide the content´s one.

    gridItemImg.style.opacity = 1;
    contentImg.style.visibility = 'hidden'; // Animate the grid´s image back to the grid position.

    TweenMax.to(gridItemImg, 1.2, {
      ease: Expo.easeInOut,
      scaleX: 1,
      scaleY: 1,
      x: 0,
      y: 0,
      rotation: gridItem.angle * 2
    }); // And also the bg element.

    TweenMax.to(gridItemBg, 1.2, {
      ease: Expo.easeInOut,
      delay: 0.15,
      x: 0,
      y: 0,
      scaleX: 1,
      scaleY: 1,
      rotation: 0,
      onComplete: function onComplete() {
        contentEl.classList.remove('content-item--current');
        gridItem.classList.remove('exclude');
        contentWrapper.style.position = 'relative';
        gridItemBg.style.position = 'absolute';
        gridItemBg.style.left = '0px';
        gridItemBg.style.top = '0px';
        activeSpeaker = -1; // allowTilt = true;

        gridItem.style.zIndex = 0;
        enableScroll();
        item.isAnimating = false;
      }
    }); // Show all the grid items except the one we want to close.

    showOthers(); // Also show the item texts. (1s delay)

    showTexts(gridItemName, gridItemKeynote);
  };

  var animationHover = function animationHover(speaker, type, nameLetters) {
    if (window.innerWidth > 990) {
      var bg = speaker.querySelector('.speaker__bg'); // Scale up the bg element.

      TweenMax.to(bg, 1, {
        ease: Expo.easeOut,
        scale: type === 'mouseenter' ? 1.15 : 1
      });
    }
  };

  if (isIE) {
    speakers.forEach(function (speaker) {
      speaker.classList.remove('no-barba');
    });
  } else {
    speakers.forEach(function (speaker) {
      var name = speaker.querySelector('.speaker__name');
      charming(name);
      var nameLetters = name.querySelectorAll('span');
      speaker.addEventListener('mouseenter', function () {
        animationHover(speaker, 'mouseenter', nameLetters);
      });
      speaker.addEventListener('mouseleave', function () {
        animationHover(speaker, 'mouseleave', nameLetters);
      });
      speaker.addEventListener('click', function (event) {
        event.preventDefault();
        openSpeaker(speaker);
      });
    });
    closeTheSpeaker.addEventListener('click', function (event) {
      event.preventDefault(); // Get the content element respective to this grid item.

      var currentContent = document.querySelector('.content-item--current');
      closeItem(currentContent);
    });
  }
};
/*
=====================================
MOBILE NAV
=====================================
*/


function hamburger() {
  var burger = document.querySelector('.menu-icon');
  var links = document.querySelectorAll('.nav-link:not(.nav-link--overview)');
  var mobileLinks = document.querySelectorAll('.mobile-nav__link:not(.has-drop)');
  var mobileNav = document.querySelector('.mobile-nav');
  var header = document.querySelector('.header');
  var slideMenu = document.querySelector('.slide-menu');
  var arrow = document.querySelector('.nav-link--large > .arrow-forward');
  var logoLink = document.querySelector('.header__logo-link');
  var slideMenuLinks = document.querySelectorAll('.nav-link--slide');
  var overview = document.querySelector('.nav-link--overview');

  var slideMenuParent = function slideMenuParent(link) {
    // slideMenuLinks.forEach(link => {
    //     if (link.classList.contains('current-menu-item')) {
    //         overview.classList.add('whoa');
    //         console.log(link);
    //     }
    // });
    if (link.classList.contains('nav-link--slide')) {
      overview.classList.add('maybe');
    } else {
      overview.classList.remove('maybe');
    }
  };

  burger.addEventListener('click', function () {
    if (window.innerWidth <= 990) {
      if (!burger.classList.contains('open')) {
        burger.classList.add('open');
        mobileNav.style.transform = 'none';
      } else {
        burger.classList.remove('open');
        mobileNav.style.transform = 'translateX(-100%)';
      }
    } else {
      if (!header.classList.contains('slim')) {
        header.classList.add('slim');
      } else {
        header.classList.remove('slim');
      }
    }
  });
  links.forEach(function (link) {
    link.addEventListener('click', function () {
      if (window.innerWidth >= 990) {
        var active = document.querySelector('.nav-link.current-menu-item');
        active.classList.remove('current-menu-item');
        link.classList.add('current-menu-item');
        header.classList.add('slim');

        if (slideMenu.classList.contains('open')) {
          slideMenu.classList.remove('open');
          TweenMax.to(slideMenu, 0.4, {
            xPercent: -100,
            autoAlpha: 0
          });
          TweenMax.to(arrow, 0.4, {
            rotation: 360
          });
        }

        setTimeout(function () {
          ga('send', 'pageview', location.pathname);
          slideMenuParent(link);
        }, 1000);
      }
    });
  });
  mobileLinks.forEach(function (link) {
    link.addEventListener('click', function () {
      if (window.innerWidth <= 990) {
        var active = document.querySelector('.nav-link.current-menu-item');
        active.classList.remove('current-menu-item');
        link.classList.add('current-menu-item');
        burger.classList.remove('open');
        mobileNav.style.transform = 'translateX(-100%)';
        setTimeout(function () {
          ga('send', 'pageview', location.pathname);
        }, 1000);
      }
    });
  });
  logoLink.addEventListener('click', function () {
    var active = document.querySelector('.nav-link.current-menu-item');
    var homeItem = document.querySelector('.menu-item-home');
    active.classList.remove('current-menu-item');
    homeItem.classList.add('current-menu-item');
  });
}

var openAccordian = function openAccordian() {
  var drops = document.querySelectorAll('.has-drop');
  drops.forEach(function (drop) {
    var parent = drop.parentElement;
    var dropdown = drop.nextElementSibling;
    var arrow = drop.querySelector('.arrow-down');
    drop.addEventListener('click', function (event) {
      event.preventDefault();

      if (!parent.classList.contains('open')) {
        parent.classList.add('open');
        dropdown.style.maxHeight = dropdown.scrollHeight + 'px';
      } else {
        parent.classList.remove('open');
        dropdown.style.maxHeight = '0';
      }
    });
  });
};
/*
=====================================
LARGE NAV - SLIDE MENU
=====================================
*/


function slideTheMenu() {
  var links = document.querySelectorAll('.nav-link--overview, .slide-menu__back');
  var arrow = document.querySelector('.arrow-forward');
  var slideMenu = document.querySelector('.slide-menu');
  links.forEach(function (link) {
    link.addEventListener('click', function (e) {
      e.preventDefault();

      if (!slideMenu.classList.contains('open')) {
        slideMenu.classList.add('open');
        TweenMax.to(slideMenu, 0.4, {
          autoAlpha: 1,
          transform: 'none'
        });
        TweenMax.to(arrow, 0.4, {
          rotation: 180
        });
      } else {
        slideMenu.classList.remove('open');
        TweenMax.to(slideMenu, 0.4, {
          xPercent: -100,
          autoAlpha: 0
        });
        TweenMax.to(arrow, 0.4, {
          rotation: 360
        });
      }
    });
  });
}
/*
=====================================
ON SCROLL DOWN - HIDE SIDE NAV
=====================================
*/

/* When the user scrolls down, hide the navbar. When the user scrolls up, show the navbar */


function scrollSideNav() {
  var header = document.querySelector('#header');
  var slideMenu = document.querySelector('.slide-menu');
  var arrow = document.querySelector('.arrow-forward');

  window.onscroll = function () {
    var scroll = window.pageYOffset;

    if (scroll >= 10 && !header.classList.contains('slim')) {
      if (slideMenu.classList.contains('open')) {
        slideMenu.classList.remove('open');
        TweenMax.to(slideMenu, 0.4, {
          xPercent: -100,
          autoAlpha: 0
        });
        TweenMax.to(arrow, 0.4, {
          rotation: 360
        });
      }

      header.classList.add('slim');
    }
  };
}
/*
=====================================
Home Page View
=====================================
*/


var Homepage = Barba.BaseView.extend({
  namespace: 'home',
  onEnter: function onEnter() {
    homeSpeakerInit();
    initHeroSlides();
    smallHeightHacks();
    window.addEventListener('resize', function () {
      smallHeightHacks();
    });
  },
  onEnterCompleted: function onEnterCompleted() {
    // The Transition has just finished.
    speakerSlider();
    homeCellSlider();
  },
  onLeave: function onLeave() {// A new Transition toward a new page has just started.
  },
  onLeaveCompleted: function onLeaveCompleted() {// The Container has just been removed from the DOM.
  }
});
/*
=====================================
BCL Page View
=====================================
*/

var BCLpage = Barba.BaseView.extend({
  namespace: 'business-consulting-lounge',
  onEnter: function onEnter() {
    BCLTopics();
  },
  onEnterCompleted: function onEnterCompleted() {// The Transition has just finished.
  },
  onLeave: function onLeave() {// A new Transition toward a new page has just started.
  },
  onLeaveCompleted: function onLeaveCompleted() {// The Container has just been removed from the DOM.
  }
});
/*
=====================================
Agenda View
=====================================
*/

var Agendapage = Barba.BaseView.extend({
  namespace: 'agenda',
  onEnter: function onEnter() {// fixedAgenda();
    // scrollAgenda();
    // scrollSideNav();
    // showFilters();
    // filters();
  },
  onEnterCompleted: function onEnterCompleted() {
    // The Transition has just finished.
    fixedAgenda();
    scrollAgenda(); // scrollSideNav();
  },
  onLeave: function onLeave() {// A new Transition toward a new page has just started.
  },
  onLeaveCompleted: function onLeaveCompleted() {// The Container has just been removed from the DOM.
  }
});
/*
=====================================
Speakers Page View
=====================================
*/

var Speakers = Barba.BaseView.extend({
  namespace: 'speakers',
  onEnter: function onEnter() {// speakersInit();
  },
  onEnterCompleted: function onEnterCompleted() {
    // The Transition has just finished.
    speakersInit();
  },
  onLeave: function onLeave() {// A new Transition toward a new page has just started.
  },
  onLeaveCompleted: function onLeaveCompleted() {// The Container has just been removed from the DOM.
  }
});

if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {
  hamburger();
  slideTheMenu();
  openAccordian();

  if (window.innerWidth > 990) {
    scrollSideNav();
  }

  if (window.innerHeight < 675 && window.innerWidth > 750) {
    document.body.classList.add('small');
  }

  window.addEventListener('resize', function () {
    if (window.innerHeight < 675 && window.innerWidth > 750) {
      document.body.classList.add('small');
    } else {
      document.body.classList.remove('small');
    }
  });
  var lastElementClicked;
  Homepage.init();
  BCLpage.init();
  Agendapage.init();
  Speakers.init();
  Barba.Pjax.start();
  Barba.Pjax.init();
  Barba.Prefetch.init();
  Barba.Dispatcher.on('linkClicked', function (el) {
    lastElementClicked = el;
  });
  var FadeTransition = Barba.BaseTransition.extend({
    start: function start() {
      /**
       * This function is automatically called as soon the Transition starts
       * this.newContainerLoading is a Promise for the loading of the new container
       * (Barba.js also comes with an handy Promise polyfill!)
       */
      // As soon the loading is finished and the old page is faded out, let's fade the new page
      Promise.all([this.newContainerLoading, this.scrollTop()]) // .then(this.fadeOut())
      .then(this.fadeIn.bind(this));
    },
    scrollTop: function scrollTop() {
      var _this2 = this;

      return new Promise(function (resolve) {
        var obj = {
          y: window.pageYOffset
        };
        var container = _this2.oldContainer;
        var tl = new TimelineMax({
          onComplete: resolve
        });
        tl.to(obj, 0.8, {
          y: 0,
          onUpdate: function onUpdate() {
            window.scroll(0, obj.y);
          },
          ease: Power4.easeOut
        }).to(container, 0.8, {
          autoAlpha: 0,
          ease: Power4.easeOut
        }, 0.1);
      });
    },
    fadeOut: function fadeOut() {
      /**
       * this.oldContainer is the HTMLElement of the old Container
       */
      this.oldContainer.style.opacity = '0.5';
      return new Promise(function (resolve) {
        resolve();
      }); // return this.oldContainer.animate({ opacity: 0 }).promise();
    },
    fadeIn: function fadeIn() {
      /**
       * this.newContainer is the HTMLElement of the new Container
       * At this stage newContainer is on the DOM (inside our #barba-container and with visibility: hidden)
       * Please note, newContainer is available just after newContainerLoading is resolved!
       */
      var _this = this;

      var $el = this.newContainer;
      this.oldContainer.style.display = 'none';
      $el.style.opacity = '0';
      setTimeout(function () {
        TweenMax.to($el, 0.6, {
          autoAlpha: 1,
          onComplete: done
        });
      }, 2000);

      function done() {
        _this.done();
      }
    }
  });
  /**
   * Next step, you have to tell Barba to use the new Transition
   */

  Barba.Pjax.getTransition = function () {
    /**
     * Here you can use your own logic!
     * For example you can use different Transition based on the current page or link...
     */
    return FadeTransition;
  };
} else {
  document.addEventListener('DOMContentLoaded', function () {
    hamburger();
    slideTheMenu();
    openAccordian();

    if (window.innerWidth > 990) {
      scrollSideNav();
    }

    if (window.innerHeight < 675 && window.innerWidth > 750) {
      document.body.classList.add('small');
    }

    window.addEventListener('resize', function () {
      if (window.innerHeight < 675 && window.innerWidth > 750) {
        document.body.classList.add('small');
      } else {
        document.body.classList.remove('small');
      }
    });
    var lastElementClicked;
    Homepage.init();
    BCLpage.init();
    Agendapage.init();
    Speakers.init();
    Barba.Pjax.start();
    Barba.Pjax.init();
    Barba.Prefetch.init();
    Barba.Dispatcher.on('linkClicked', function (el) {
      lastElementClicked = el;
    });
    var FadeTransition = Barba.BaseTransition.extend({
      start: function start() {
        /**
         * This function is automatically called as soon the Transition starts
         * this.newContainerLoading is a Promise for the loading of the new container
         * (Barba.js also comes with an handy Promise polyfill!)
         */
        // As soon the loading is finished and the old page is faded out, let's fade the new page
        Promise.all([this.newContainerLoading, this.scrollTop()]) // .then(this.fadeOut())
        .then(this.fadeIn.bind(this));
      },
      scrollTop: function scrollTop() {
        var _this3 = this;

        return new Promise(function (resolve) {
          var obj = {
            y: window.pageYOffset
          };
          var container = _this3.oldContainer;
          var tl = new TimelineMax({
            onComplete: resolve
          });
          tl.to(obj, 0.8, {
            y: 0,
            onUpdate: function onUpdate() {
              window.scroll(0, obj.y);
            },
            ease: Power4.easeOut
          }).to(container, 0.8, {
            autoAlpha: 0,
            ease: Power4.easeOut
          }, 0.1);
        });
      },
      fadeOut: function fadeOut() {
        /**
         * this.oldContainer is the HTMLElement of the old Container
         */
        this.oldContainer.style.opacity = '0.5';
        return new Promise(function (resolve) {
          resolve();
        }); // return this.oldContainer.animate({ opacity: 0 }).promise();
      },
      fadeIn: function fadeIn() {
        /**
         * this.newContainer is the HTMLElement of the new Container
         * At this stage newContainer is on the DOM (inside our #barba-container and with visibility: hidden)
         * Please note, newContainer is available just after newContainerLoading is resolved!
         */
        var _this = this;

        var $el = this.newContainer;
        this.oldContainer.style.display = 'none';
        $el.style.opacity = '0';
        setTimeout(function () {
          TweenMax.to($el, 0.6, {
            autoAlpha: 1,
            onComplete: done
          });
        }, 2000);

        function done() {
          _this.done();
        }
      }
    });
    /**
     * Next step, you have to tell Barba to use the new Transition
     */

    Barba.Pjax.getTransition = function () {
      /**
       * Here you can use your own logic!
       * For example you can use different Transition based on the current page or link...
       */
      return FadeTransition;
    };
  });
}
//# sourceMappingURL=site.min.js.map
